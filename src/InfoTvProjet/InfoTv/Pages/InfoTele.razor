@page "/info"

@inject IInfoViewModel ViewModel

<div class="row-full">
	@if(!string.IsNullOrEmpty(ViewModel.Message))
	{ 
		<div>
			<MessageInfo ColorDisplay="@ViewModel.ColorMessage"
						 Visibility="@ViewModel.Visibility"
						 MessageToDisplay="@ViewModel.Message" />
		</div>
	}
	<div class="center-content">
		@ViewModel.RenderVideo
	</div>
</div>

@code {
	protected async override void OnInitialized()
	{
		base.OnInitialized();
		await ViewModel.LoadMessage();
		ViewModel.LoadPowerPoint();
		StateHasChanged();
		
		ViewModel.SetStateHasChanged(StateHasChanged);
		ViewModel.SetInvocateur(Invoke);

		await ViewModel.InitHub();
	}

	/// <summary>
	/// Libère les ressources du HubConnection,
	/// quand l'utilisateur quitte la vue.
	/// </summary>
	/// <returns></returns>
	public async ValueTask DisposeAsync()
	{
		await ViewModel.DisposeHubConnection();
	}

	private async Task Invoke()
	{
		await InvokeAsync(() => {StateHasChanged();});
	}
}
